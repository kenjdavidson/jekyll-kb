/// Required variable creation based on builder specification
/// https://github.com/chriskempson/base16/blob/master/builder.md
 
/// Applies the provided base16 map to the specified css selector as
/// as css variables.
/// 
/// @param $selector the name of the CSS selector to receive vars
/// @param $base16 the $base16 theme map
@mixin apply-scheme($selector, $base16) {
  #{$selector} {
    @each $name,$color in $base16 {
      --#{$name}: #{$color};
    }
  }
} 

/// Builds all the applicable values based on the Base16 builder
/// specification.
/// 
/// @param {map} $base16 
///   The $base16-scheme map containing all colors
/// @returns {map}
///   The converted map file including variable definitions
@function build-scheme($base16) {
  @each $name,$color in $base16 {
    // Hex values
    $base16: map-merge($base16, (    
      #{$name}: unquote('##{$color}'),
      #{$name}-hex: unquote('#{$color}'),     
      #{$name}-hex-r: str-slice($color, 1, 2),
      #{$name}-hex-g: str-slice($color, 3, 4),
      #{$name}-hex-b: str-slice($color, 5, 6),      
    ));

    $base16: map-merge($base16, (
      #{$name}-hex-bgr: #{map-get($base16,#{$name}-hex-b)}#{map-get($base16,#{$name}-hex-g)}#{map-get($base16,#{$name}-hex-r)}
    ));

    // RGB = hex converted
    $base16: map-merge($base16, (
      #{$name}-rgb-r: hex-to-rgb(str-slice($color, 1, 2)),
      #{$name}-rgb-g: hex-to-rgb(str-slice($color, 3, 4)),
      #{$name}-rgb-b: hex-to-rgb(str-slice($color, 5, 6))
    ));

    // Decimal = rgb / 255
    $base16: map-merge($base16, (
      #{$name}-dec-r: map-get($base16,#{$name}-rgb-r) / 255,
      #{$name}-dec-g: map-get($base16,#{$name}-rgb-g) / 255,
      #{$name}-dec-b: map-get($base16,#{$name}-rgb-b) / 255
    ));    
  }; 

  @return $base16;
}

/// Convert hex value to rgb (integer).
/// 
/// @param {number} $hex
///   The hex value to be converted to rbg
@function hex-to-rgb($hex) {  
  $digits: '0123456789ABCDEF';
  $hex: to-upper-case($hex);
  $dec: 0;

  @for $i from 1 through str-length($hex) {
    $digit: str-slice($hex, $i, $i);
    $val: str-index($digits, $digit)-1;
    $dec: 16*$dec + $val;
  }
  
  @return $dec;
}
